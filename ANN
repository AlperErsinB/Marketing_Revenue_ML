from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()
scaler.fit(X_train)

X_train_scaled = scaler.transform(X_train)

X_test_scaled = scaler.transform(X_test)

from sklearn.neural_network import MLPRegressor

mlp_model = MLPRegressor(hidden_layer_sizes = (100,20)).fit(X_train_scaled, y_train)

mlp_model

mlp_model.n_layers_

mlp_model.hidden_layer_sizes

y_pred = mlp_model.predict(X_test_scaled)

np.sqrt(mean_squared_error(y_test, y_pred))


mlp_model

mlp_params = {'alpha': [0.1, 0.01,0.02,0.005],
             'hidden_layer_sizes': [(20,20),(100,50,150),(300,200,150)],
             'activation': ['relu','logistic']}
             
mlp_cv_model = GridSearchCV(mlp_model, mlp_params, cv = 10)

mlp_cv_model.fit(X_train_scaled, y_train)


mlp_cv_model.best_params_

mlp_tuned = MLPRegressor(alpha = 0.02, hidden_layer_sizes = (100,50,150))

mlp_tuned.fit(X_train_scaled, y_train)

y_pred = mlp_tuned.predict(X_test_scaled)

np.sqrt(mean_squared_error(y_test, y_pred))

